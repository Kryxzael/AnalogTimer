<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="overwatchBar1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAABFGSURBVHhe7ZhBi5RXFoZrIwREhCCKhDTSg0FJiJghLSSE
        ILoIMgFxFr0QhlklIJhVXLiYgVnOqiG4DFnHvfv0Jr/AP5CfkH/wzX1P1du+ffJ22dw53DGZG3iu5TmP
        7/mq+tRX1VkdHh4ur+PXX3+1deVNcn5v1wv+aE4s1mfL6kTQZ4DrA3VWTxfLKKciA0yn34la+29Zfbte
        kHfa48uft7+jZnjnJ+N8IY+vyePz8vjWT23YwfKAf9/UVrvH//78yd7y0R2p7e69enwSF+Xx7sevHuu1
        qHP51eNre1JX5+a3yx4fi39Szv7B5sW998WJzmr/wDuZh8bR58UckF4/+8O+1XrI3Px920KQ/9aJ2uHh
        s+XShVcX+FbjQlsgLNrb7fH+cwS8XJ7ID8E5L7/7dP1C4kk8+vfavYtBPy+rs/y3Hy1Pmrt6+suy2tnU
        4knj7x8s7+Lvd35YXxgzrsNp/d32Yj9qF32w32rXly/xw3z07dq5z5lX1tf74u9tsXfDP+Y8/KpdywfL
        1+E8aHXjPP0xHu/9E87j9XO61+aflPPri2V/1d4Af/t+3QexHJ+3a9iL53v0+t1PTszaXDN/SI+2OZuc
        eI03Hl+/9vqsZ70xi3W4fPx9W5DG1Y/bRXy4vjN99stqOf/+arnx5PlRABZpm3Owv3kSD9sPAXesW+0J
        Y1h7B+49ebZ8d+fOZrFa7daVtcMn3d5956/cWO5893J9YcjAOxXvSjh4F7cf8OHh85bzeDkIp/2A32p9
        LHD4e23O+lpw94uFUOfoWuDIDynnXPzg2POOf6cOruXDz4/PwnVeTs/paNYJDpYjz8IibHGOvcZ8I6dZ
        R9cM/leLdfTuEGJpfvxtXQmn4XpH8AflegRP+q7c6h2vc/7c+lhUrcldODjtteSczGmv9zSz7rcFdT0S
        OW2hXY+cdtY2h2860BZxvaC4E4uDjLQ8Wxfr+e2zy+rMarnYluTKuy2gPb60uRvhIw+f6S8fvxP1swfJ
        2XwvWw9/a1mda3/iAq62x0cX075LrdoPYv8fy792Ns7d9iTPreeuP+baxxucvWvLp3faLLxbr7cf8Ln2
        URVOy3kIZ395dPtyy7++7PD7Be4iZ1se7iK3vmy128sLfITh4/f8jbWDjMvtnc9raXOiDufW5ofLOfew
        NJfWNdazEzmbPrneajtnkoPn3V6/B+25wkFdnfh4bbPiNd7MxA/5NzlcdnmNb77tZz3eeXW3u98+jo85
        38ad/uV3d9bfL8Npz+18u45YiuMOFizquGvu4vWDs+a1i7W+4DXnr6yWM+1PLBnuWGfle9VJzhk8ieQc
        /WBw4Xin6JdYcgs/QPyJhWjvSuusv+9EDu4SeFGzE9/f2r/HYuW7lIKP5ddeS3Nwx8KybnNOytk9v/5z
        2/NW5/4Jz/uY057XtuvZNushFgV/bhy+GX/jtB6WAk583WhLgzfnkdN6Znm2Ltaj9pl9sYGPtkubJcGd
        6Rp+22u//WFrXzxeLbdvtr83T50/fdAevyfOVfT+8upJ4t23e6G9Az9uzrPlm0ubOu5SdE5ahrvtRefS
        IudiexdfuLHcvr1aHr/YfNeAg3ckFhl3uLfOLle+Xl/LJ/itMJaATrvjHV2LPKfrbXl5LTvtRb7c7goX
        Ptzu6HPiLyEKnUt4g91d/rrNeV1OPO8t13PsNd447TVafxIk5+ar3xzX39XotNcOy4M3OX5BOrY0dDbL
        J8uzdbEOcBHtToCPtqttkXA3OoNle6fV2w8dX7ZfPEDwepnUuYSB7d/it6MX/N8O+GE+wsdWe3y9XczF
        9xqfL0+efb3soIZ3H56Ecb5+uLucoxO/Qd3eOFgOfJx8tfxjv30Utpk77c65ut/+LfqrdsvfaR8Nq7eX
        L9u1vPxmc8e8iWuh82H7dy3j7I14Tj98hFpDr/dym3Px3fb43fgt7ETnPD6G3jv+vPHbIj6m8RjP6QKu
        YZ0Trx+ftzpyPXyNYwnU0Vlw8CY56TXOs54eiPP+0d0Iy7eL1y+ctrwrfGo0Z/NxRweLul4WOK2flufU
        H4XgDO8qWziNcyrcLf4kLn/i61XEXe01nMY5zXOqctxXgwz+fxjubvc2Xysc935e35XwW/TR0qQv75ue
        Ls/WxcKBL+EKvpC393c81oDTOK8GHN/yUU5FxnScc5xtTtRwHC1M+zjEduL/abGmAadxIhxfAtOWj3Iq
        MqaTHMM2J2o4uCAODXB9oE4eQkY5FRlgOv1O1HC4ZSEa4PpAnTyEjHIqMsB0+p2o4XDLQjTA9YE6eQgZ
        5VRkgOn0O1HD4ZaFaIDrA3XyEDLKqcgA0+l3oobDLQvRANcH6uQhZJRTkQGm0+9EDYdbFqIBrg/UyUPI
        KKciA0yn34kaDrcsRANcH6iTh5BRTkUGmE6/EzUcblmIBrg+UCcPIaOcigwwnX4najjcshANcH2gTh5C
        RjkVGWA6/U7UcLhlIRrg+kCdPISMcioywHT6najhcMtCNMD1gTp5CBnlVGSA6fQ7UcPhloVogOsDdfIQ
        MsqpyADT6XeihsMtC9EA1wfq5CFklFORAabT70QNh1sWogGuD9TJQ8gopyIDTKffiRoOtyxEA1wfqJOH
        kFFORQaYTr8TNRxuWYgGuD5QJw8ho5yKDDCdfidqONyyEA1wfaBOHkJGORUZYDr9TtRwuGUhGuD6QJ08
        hIxyKjLAdPqdqOFwy0I0wPWBOnkIGeVUZIDp9DtRw+GWhWiA6wN18hAyyqnIANPpd6KGwy0L0QDXB+rk
        IWSUU5EBptPvRA2HWxaiAa4P1MlDyCinIgNMp9+JGg63LEQDXB+ok4eQUU5FBphOvxM1HG5ZiAa4PlAn
        DyGjnIoMMJ1+J2o43LIQDXB9oE4eQkY5FRlgOv1O1HC4ZSEa4PpAnTyEjHIqMsB0+p2o4XDLQjTA9YE6
        eQgZ5VRkgOn0O1HD4ZaFaIDrA3XyEDLKqcgA0+l3oobDLQvRANcH6uQhZJRTkQGm0+9EDYdbFqIBrg/U
        yUPIKKciA0yn34kaDrcsRANcH6iTh5BRTkUGmE6/EzUcblmIBrg+UCcPIaOcigwwnX4najjcshANcH2g
        Th5CRjkVGWA6/U7UcLhlIRrg+kCdPISMcioywHT6najhcMtCNMD1gTp5CBnlVGSA6fQ7UcPhloVogOsD
        dfIQMsqpyADT6XeihsMtC9EA1wfq5CFklFORAabT70QNh1sWogGuD9TJQ8gopyIDTKffiRoOtyxEA1wf
        qJOHkFFORQaYTr8TNRxuWYgGuD5QJw8ho5yKDDCdfidqONyyEA1wfaBOHkJGORUZYDr9TtRwuGUh6DPA
        9YE67kLBKOdNuhbw/+hEDYdbFqIBrg/UyUPIKKciA0yn34kaDrcsRANcH6iTh5BRTkUGmE6/EzUcblmI
        Brg+UCcPIaOcigwwnX4najjcshANcH2gTh5CRjkVGWA6/U7UcLhlIRrg+kCdPISMcioywHT6najhcMtC
        NMD1gTp5CBnlVGSA6fQ7UcPhloVogOsDdfIQMsqpyADT6XeihsMtC9EA1wfq5CFklFORAabT70QNh1sW
        ogGuD9TJQ8gopyIDTKffiRoOtyxEA1wfqJOHkFFORQaYTr8TNRxuWYgGuD5QJw8ho5yKDDCdfidqONyy
        EA1wfaBOHkJGORUZYDr9TtRwuGUhGuD6QJ08hIxyKjLAdPqdqOFwy0I0wPWBOnkIGeVUZIDp9DtRw+GW
        hWiA6wN18hAyyqnIANPpd6KGwy0L0QDXB+rkIWSUU5EBptPvRA2HWxaiAa4P1MlDyCinIgNMp9+JGg63
        LEQDXB+ok4eQUU5FBphOvxM1HG5ZiAa4PlAnDyGjnIoMMJ1+J2o43LIQDXB9oE4eQkY5FRlgOv1O1HC4
        ZSEa4PpAnTyEjHIqMsB0+p2o4XDLQjTA9YE6eQgZ5VRkgOn0O1HD4ZaFaIDrA3XyEDLKqcgA0+l3oobD
        LQvRANcH6uQhZJRTkQGm0+9EDYdbFqIBrg/UyUPIKKciA0yn34kaDrcsRANcH6iTh5BRTkUGmE6/EzUc
        blmIBrg+UCcPIaOcigwwnX4najjcshANcH2gTh5CRjkVGWA6/U7UcLhlIRrg+kCdPISMcioywHT6najh
        cMtCNMD1gTp5CBnlVGSA6fQ7UcPhloVogOsDdfIQMsqpyADT6XeihsMtC9EA1wfq5CFklFORAabT70QN
        h1sWogGuD9TJQ8gopyIDTKffiRoOtyxEA1wfqJOHkFFORQaYTr8TNRxuWYgGuD5QJw8ho5yKDDCdfidq
        ONyyEA1wfaBOHkJGORUZYDr9TtRwuGUhGuD6QJ08hIxyKjLAdPqdqOFwy0I0wPWBOnkIGeVUZIDp9DtR
        w+GWhWiA6wN18hAyyqnIANPpd6KGwy0L0QDXB+rkIWSUU5EBptPvRA2HWxaiAa4P1MlDyCinIgNMp9+J
        Gg63LEQDXB+ok4eQUU5FBphOvxM1HG5ZiAa4PlAnDyGjnIoMMJ1+J2o43LIQDXB9oE4eQkY5FRlgOv1O
        1HC4ZSEa4PpAnTyEjHIqMsB0+p2o4XDLQjTA9YE6eQgZ5VRkgOn0O1HD4ZaFaIDrA3XyEDLKqcgA0+l3
        oobDLQvRANcH6uQhZJRTkQGm0+9EDYdbFqIBrg/UyUPIKKciA0yn34kaDrcsRANcH6iTh5BRTkUGmE6/
        EzUcblmIBrg+UCcPIaOcigwwnX4najjcshANcH2gTh5CRjkVGWA6/U7UcLhlIRrg+kCdPISMcioywHT6
        najhcMtCNMD1gTp5CBnlVGSA6fQ7UcPhloWgzwDXB+ro8NNeCKlwKjLAdPqdqOFwy0I0wPWBOnkIGeVU
        ZIDp9DtRw+GWhWiA6wN18hAyyqnIANPpd6KGwy0L0QDXB+rkIWSUU5EBptPvRA2HWxaiAa4P1MlDyCin
        IgNMp9+JGg63LEQDXB+ok4eQUU5FBphOvxM1HG5ZiAa4PlAnDyGjnIoMMJ1+J2o43LIQDXB9oE4eQkY5
        FRlgOv1O1HC4ZSEa4PpAnTyEjHIqMsB0+p2o4XDLQjTA9YE6eQgZ5VRkgOn0O1HD4ZaFaIDrA3XyEDLK
        qcgA0+l3oobDLQvRANcH6uQhZJRTkQGm0+9EDYdbFqIBrg/UyUPIKKciA0yn34kaDrcsRANcH6iTh5BR
        TkUGmE6/EzUcblmIBrg+UCcPIaOcigwwnX4najjcshANcH2gTh5CRjkVGWA6/U7UcLhlIRrg+kCdPISM
        cioywHT6najhcMtCNMD1gTp5CBnlVGSA6fQ7UcPhloVogOsDdfIQMsqpyADT6XeihsMtC9EA1wfq5CFk
        lFORAabT70QNh1sWogGuD9TJQ8gopyIDTKffiRoOtyxEA1wfqJOHkFFORQaYTr8TNRxuWYgGuD5QJw8h
        o5yKDDCdfidqONyyEA1wfaBOHkJGORUZYDr9TtRwuGUhGuD6QJ08hIxyKjLAdPqdqOFwy0I0wPWBOnkI
        GeVUZIDp9DtRw+GWhWiA6wN18hAyyqnIANPpd6KGwy0L0QDXB+rkIWSUU5EBptPvRA2HWxaiAa4P1MlD
        yCinIgNMp9+JGg63LEQDXB+ok4eQUU5FBphOvxM1HG5ZiAa4PlAnDyGjnIoMMJ1+J2o43LIQDXB9oE4e
        QkY5FRlgOv1O1HC4ZSEa4PpAnTyEjHIqMsB0+p2o4XDLQjTA9YE6eQgZ5VRkgOn0O1HD4ZaFaIDrA3Xy
        EDLKqcgA0+l3oobDLQvRANcH6uQhZJRTkQGm0+9EDYdbFqIBrg/UyUPIKKciA0yn34kaDrcsRANcH6iT
        h5BRTkUGmE6/EzUcblmIBrg+UCcPIaOcigwwnX4najjcshANcH2gTh5CRjkVGWA6/U7UcLwOBmzjTXJ+
        b9cL/ljO4fIfShirTXzNHWQAAAAASUVORK5CYII=
</value>
  </data>
</root>